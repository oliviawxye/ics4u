/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my.yeoliviacoffeeklatch;

/**
 *
 * @author 335462040
 */
public class CoffeeKlatchUI extends javax.swing.JFrame {
    // ICS4UE
    // Olivia Ye
    // Assignment 3: Coffee Klatch
    
    /**
     * Sets all the buttons to disabled if first clicked program of the button is not 'New Customer'
     * Prompts them to click new customer
     */
    public void initial() {
        if (start == false) {
            smallCup.setEnabled(false);
            mediumCup.setEnabled(false);
            largeCup.setEnabled(false);
            weakStrength.setEnabled(false);
            regularStrength.setEnabled(false);
            strongStrength.setEnabled(false);
            addWater.setEnabled(false);
            grindBeans.setEnabled(false);
            brewCoffee.setEnabled(false);
            addBeans.setEnabled(false);
            pourCup.setEnabled(false);
            drinkCup.setEnabled(false);
            instructionsDisplay.setText("Wrong button. Please click 'New Customer'.");
        }
    }

    /**
     * Disables all buttons except 'New Customer', 'Input Name', and 'Exit'
     * Resets the information in the text fields to blank
     * Resets the coffee information in the text fields
     */
    public void newCustomer() {
        nameInput.setEnabled(true);
        smallCup.setEnabled(false);
        mediumCup.setEnabled(false);
        largeCup.setEnabled(false);
        weakStrength.setEnabled(false);
        regularStrength.setEnabled(false);
        strongStrength.setEnabled(false);
        addWater.setEnabled(false);
        grindBeans.setEnabled(false);
        brewCoffee.setEnabled(false);
        addBeans.setEnabled(false);
        pourCup.setEnabled(false);
        drinkCup.setEnabled(false);
        nameInput.setText("");
        nameDisplay.setText("");
        sizeDisplay.setText("");
        strengthDisplay.setText("");
        customer.setWaterLevel(0);
        waterDisplay.setText(Integer.toString(customer.getWaterLevel()));
        beansAddedDisplay.setText("False");
        beansGrindedDisplay.setText("False");
        coffeeBrewedDisplay.setText("False");
        cupStatusDisplay.setText("Empty");
    }

    /**
     * Method for when a cup size is chosen
     * Disables the cup size buttons
     * Displays a request to choose the coffee strength
     * Enables the strength buttons
     */
    public void submittedCupSize() {
        smallCup.setEnabled(false);
        mediumCup.setEnabled(false);
        largeCup.setEnabled(false);
        weakStrength.setEnabled(true);
        regularStrength.setEnabled(true);
        strongStrength.setEnabled(true);
        instructionsDisplay.setText("Please choose the strength of your coffee.");
    }

    /**
     * Method for when the strength is chosen
     * Disables the strength buttons
     * Displays a request to add water
     * Enables the add water button
     */
    public void submittedStrength() {
        weakStrength.setEnabled(false);
        regularStrength.setEnabled(false);
        strongStrength.setEnabled(false);
        instructionsDisplay.setText("Please add water.");
        addWater.setEnabled(true);
    }
    
    // Creates a new cup
    CoffeeCup cup = new CoffeeCup();
    // Creates a new customer
    CoffeeMachine customer = new CoffeeMachine();
    // Size of the cup in words
    String cSize;
    // Whether or not the first 'New Customber' button was clicked
    boolean start = false;

    /**
     * Creates new form CoffeeKlatchUI
     */
    public CoffeeKlatchUI() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        newCustomer = new javax.swing.JButton();
        addWater = new javax.swing.JButton();
        addBeans = new javax.swing.JButton();
        grindBeans = new javax.swing.JButton();
        brewCoffee = new javax.swing.JButton();
        pourCup = new javax.swing.JButton();
        drinkCup = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        nameInput = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        smallCup = new javax.swing.JButton();
        mediumCup = new javax.swing.JButton();
        largeCup = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        nameDisplay = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        weakStrength = new javax.swing.JButton();
        regularStrength = new javax.swing.JButton();
        strongStrength = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        sizeDisplay = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        strengthDisplay = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        waterDisplay = new javax.swing.JTextField();
        cupStatus = new javax.swing.JLabel();
        cupStatusDisplay = new javax.swing.JTextField();
        beansAddedDisplay = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        beansGrindedDisplay = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        coffeeBrewedDisplay = new javax.swing.JTextField();
        inputName = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        instructionsDisplay = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("MS Reference Sans Serif", 0, 18)); // NOI18N
        jLabel1.setText("Coffee Klatch");

        newCustomer.setText("New Customer");
        newCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newCustomerActionPerformed(evt);
            }
        });

        addWater.setText("Add Water (10 units)");
        addWater.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addWaterActionPerformed(evt);
            }
        });

        addBeans.setText("Add Coffee Beans");
        addBeans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBeansActionPerformed(evt);
            }
        });

        grindBeans.setText("Grind Beans");
        grindBeans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grindBeansActionPerformed(evt);
            }
        });

        brewCoffee.setText("Brew Coffee to Pot");
        brewCoffee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brewCoffeeActionPerformed(evt);
            }
        });

        pourCup.setText("Pour A Cup");
        pourCup.setToolTipText("");
        pourCup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pourCupActionPerformed(evt);
            }
        });

        drinkCup.setText("Drink a Cup");
        drinkCup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drinkCupActionPerformed(evt);
            }
        });

        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Options");

        jLabel3.setText("Name:");

        jLabel4.setText("Cup Size (units):");

        smallCup.setText("Small (2)");
        smallCup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smallCupActionPerformed(evt);
            }
        });

        mediumCup.setText("Medium (3)");
        mediumCup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mediumCupActionPerformed(evt);
            }
        });

        largeCup.setText("Large (4)");
        largeCup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                largeCupActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Instructions");

        jLabel6.setText("Name:");

        jLabel7.setText("Strength");

        weakStrength.setText("Weak");
        weakStrength.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                weakStrengthActionPerformed(evt);
            }
        });

        regularStrength.setText("Regular");
        regularStrength.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regularStrengthActionPerformed(evt);
            }
        });

        strongStrength.setText("Strong");
        strongStrength.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                strongStrengthActionPerformed(evt);
            }
        });

        jLabel9.setText("Size:");

        jLabel8.setText("Strength:");

        jLabel10.setText("Water Level:");

        waterDisplay.setText("0");

        cupStatus.setText("Cup Status: ");

        cupStatusDisplay.setText("Empty");

        beansAddedDisplay.setText("False");

        jLabel12.setText("Beans Added:");

        beansGrindedDisplay.setText("False");

        jLabel13.setText("Beans Grinded:");

        jLabel14.setText("Brewed Coffee in Pot:");

        coffeeBrewedDisplay.setText("False");

        inputName.setText("Input Name");
        inputName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputNameActionPerformed(evt);
            }
        });

        instructionsDisplay.setColumns(20);
        instructionsDisplay.setRows(5);
        instructionsDisplay.setText("Please click \"New Customer\".");
        jScrollPane1.setViewportView(instructionsDisplay);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(largeCup, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel4)
                                            .addComponent(mediumCup, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                                            .addComponent(smallCup, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(nameInput, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel3)
                                            .addComponent(newCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))))
                                .addGap(44, 44, 44)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(inputName)
                                    .addComponent(grindBeans, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pourCup, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(drinkCup, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addWater, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addBeans, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(brewCoffee))
                                .addGap(49, 49, 49))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel7)
                                    .addComponent(weakStrength, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(regularStrength, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                                    .addComponent(strongStrength, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel1)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel10)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(waterDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel12)
                                        .addComponent(jLabel13))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(beansGrindedDisplay, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(beansAddedDisplay, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(cupStatus)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cupStatusDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel14)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(coffeeBrewedDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(283, 283, 283))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(exit)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(nameDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel9)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(sizeDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel8)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(strengthDisplay))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(newCustomer)
                            .addComponent(inputName)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6)
                            .addComponent(nameDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(sizeDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(strengthDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(addWater)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addBeans))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(grindBeans)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(brewCoffee)
                            .addComponent(smallCup)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(waterDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pourCup)
                            .addComponent(mediumCup))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(drinkCup)
                            .addComponent(largeCup))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(weakStrength)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(regularStrength)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(strongStrength)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(beansAddedDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(beansGrindedDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(coffeeBrewedDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cupStatusDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cupStatus))
                        .addGap(17, 17, 17)
                        .addComponent(exit)
                        .addGap(59, 59, 59))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 867, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputNameActionPerformed
        // Name input button
        // Checks to see if the new customer button was pressed at the beginning of the program
        initial();
        // If conditional to execute if the first new customer button was pressed
        if (start == true) {
            // Try catch statement to check for an empty input
            boolean check = false;
            try {
                (nameInput.getText()).substring(0,1);
                check = true;
            } catch (StringIndexOutOfBoundsException e) {
                instructionsDisplay.setText("Invalid input. Please enter the name of the customer under 'Name' and click 'Input Name'.");
                check = false;
            }
            // If conditional to execute if the input was not empty
            if (check == true) {
                // Sets and displays the name of the customer and displays instructions
                cup.setName(nameInput.getText());
                nameDisplay.setText(cup.getName());
                instructionsDisplay.setText("Please choose the coffee cup size under 'Cup Size'");
                // Disables the 'Input Name' button and enables the cup size buttons
                inputName.setEnabled(false);
                smallCup.setEnabled(true);
                mediumCup.setEnabled(true);
                largeCup.setEnabled(true);
            }
        }
    }//GEN-LAST:event_inputNameActionPerformed

    private void strongStrengthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_strongStrengthActionPerformed
        // Strong strength button
        initial();
        // If conditional to execute if the first new customer button was pressed
        if (start == true) {
            // Sets the strength of the customer's coffee to strong and displays the text
            customer.setStrength("Strong");
            strengthDisplay.setText(customer.getStrength());
            // Method to activate/deactivate the correct buttons
            submittedStrength();
        }
    }//GEN-LAST:event_strongStrengthActionPerformed

    private void regularStrengthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regularStrengthActionPerformed
        // Regular strength button
        initial();
        // If conditional to execute if the first new customer button was pressed
        if (start == true) {
            // Sets the strength of the customer's coffee to regular and displays the text
            customer.setStrength("Regular");
            strengthDisplay.setText(customer.getStrength());
            // Method to activate/deactivate the correct buttons
            submittedStrength();
        }
    }//GEN-LAST:event_regularStrengthActionPerformed

    private void weakStrengthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_weakStrengthActionPerformed
        // Weak strength button
        initial();
        // If conditional to execute if the first new customer button was pressed
        if (start == true) {
            // Sets the strength of the customer's coffee to weak and displays the text
            customer.setStrength("Weak");
            strengthDisplay.setText(customer.getStrength());
            // Method to activate/deactivate the correct buttons
            submittedStrength();
        }
    }//GEN-LAST:event_weakStrengthActionPerformed

    private void largeCupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_largeCupActionPerformed
        // Large Cup button
        initial();
        // If conditional to execute if the first new customer button was pressed
        if (start == true) {
            // Sets the size of the cup to large (4 units) and displays the text
            customer.setCupSize(4);
            cSize = "Large";
            sizeDisplay.setText(cSize);
            // Method to activate/deactivate the correct buttons
            submittedCupSize();
        }
    }//GEN-LAST:event_largeCupActionPerformed

    private void mediumCupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mediumCupActionPerformed
        // Medium Cup button
        initial();
        // If conditional to execute if the first new customer button was pressed
        if (start == true) {
            // Sets the size of the cup to medium (3 units) and displays the text
            customer.setCupSize(3);
            cSize = "Medium";
            sizeDisplay.setText(cSize);
            // Method to activate/deactivate the correct buttons
            submittedCupSize();
        }
    }//GEN-LAST:event_mediumCupActionPerformed

    private void smallCupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smallCupActionPerformed
        // Small Cup button
        // Checks to see if the new customer button was pressed at the beginning of the program
        initial();
        // If conditional to execute if the first new customer button was pressed
        if (start == true) {
            // Sets the size of the cup to small (2 units) and displays the text
            customer.setCupSize(2);
            cSize = "Small";
            sizeDisplay.setText(cSize);
            // Method to activate/deactivate the correct buttons
            submittedCupSize();
        }
    }//GEN-LAST:event_smallCupActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // Exit button
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    private void drinkCupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drinkCupActionPerformed
        // Drink Cup button
        // Checks to see if the new customer button was pressed at the beginning of the program
        initial();
        // If conditional to execute if the first new customer button was pressed
        if (start == true) {
            // Executes the drink command, displays the cup status, and instructions based on the level of coffee in the cup
            cup.drink();
            cupStatusDisplay.setText("Empty");
            if (cup.isFull() == false) {
                instructionsDisplay.setText(cup.getSentence() + "\nPlease pour a cup.");
            }
            else {
                instructionsDisplay.setText(cup.getSentence() + "\nDone. You may now pour another cup.");
            }
        }
    }//GEN-LAST:event_drinkCupActionPerformed

    private void pourCupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pourCupActionPerformed
        // Pour cup button
        // Checks to see if the new customer button was pressed at the beginning of the program
        initial();
        // If conditional to execute if the first new customer button was pressed
        if (start == true) {
            // If conditional to execute if the waterLevel is less than 0 after subtracting
            if (cup.isFull() == true) {
                instructionsDisplay.setText("The cup will overflow if you try to pour. Please drink the cup.");
            } else {
                // Subtracts the required water level
                customer.setWaterLevel(customer.pourCup(customer.getCupSize(), customer.getWaterLevel()));
            }
            if (customer.getWaterLevel() < 0) {
                // Prompts for more water, resets and displays the water level, and resets the entire machine and displays to re-make the coffee
                instructionsDisplay.setText("Need more make more coffee. Please add water.");
                customer.setWaterLevel(0);
                waterDisplay.setText(Integer.toString(customer.getWaterLevel()));
                beansAddedDisplay.setText("False");
                beansGrindedDisplay.setText("False");
                coffeeBrewedDisplay.setText("False");
                pourCup.setEnabled(false);
                drinkCup.setEnabled(false);
                addWater.setEnabled(true);
            } else if (cup.isFull() == false) {
                // Fills the cup, displays the updated water level, and the cup status
                cup.fill();
                waterDisplay.setText(Integer.toString(customer.getWaterLevel()));
                cupStatusDisplay.setText("Full");
                instructionsDisplay.setText("Pouring a " + cSize + " sized, " + customer.getStrength() + " strength cup of coffee.\nDone. You may now drink the cup.");
            }
        }
    }//GEN-LAST:event_pourCupActionPerformed

    private void brewCoffeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brewCoffeeActionPerformed
        // Brew coffee button
        // Checks to see if the new customer button was pressed at the beginning of the program
        initial();
        // If conditional to execute if the first new customer button was pressed
        // If conditional to execute if the waterlevel is 10, if the beans were added, if the beans were ground
        if (start == true) {
            // Brews the coffee, displays instructions and coffee brewed status
            customer.brew();
            instructionsDisplay.setText(customer.getSentence() + "\nDone. You may now pour the coffee.");
            coffeeBrewedDisplay.setText("True");
            // Disables the 'Brew Coffee' button, enables the 'Pour Cup' and 'Drink Cup' buttons, and sets the cup to empty
            brewCoffee.setEnabled(false);
            pourCup.setEnabled(true);
            drinkCup.setEnabled(true);
            cup.setIsFull(false);
        }
    }//GEN-LAST:event_brewCoffeeActionPerformed

    private void grindBeansActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grindBeansActionPerformed
        // Grind Beans button
        // Checks to see if the new customer button was pressed at the beginning of the program
        initial();
        // If conditional to execute if the first new customer button was pressed
        if (start == true) {
            // Grinds the beans, displays the beans, and displays instructions
            customer.grindBeans();
            beansGrindedDisplay.setText("True");
            instructionsDisplay.setText(customer.getSentence() + "\nDone. Please brew the coffee.");
            // Disables the 'Grind Beans' button and enables the 'Brew Coffee' button
            grindBeans.setEnabled(false);
            brewCoffee.setEnabled(true);
        }
    }//GEN-LAST:event_grindBeansActionPerformed

    private void addBeansActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBeansActionPerformed
        // Add Coffee Beans button
        // Checks to see if the new customer button was pressed at the beginning of the program
        initial();
        /// If conditional to execute if the first new customer button was pressed
        if (start == true) {
            // Adds the beans, displays the beans, and displays instructions
            customer.addBeans();
            beansAddedDisplay.setText("True");
            instructionsDisplay.setText(customer.getSentence() + "\nDone. Please grind the beans.");
            // Disables the 'Add Beans' button and enables the 'Grind Beans' button
            addBeans.setEnabled(false);
            grindBeans.setEnabled(true);
        }
    }//GEN-LAST:event_addBeansActionPerformed

    private void addWaterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addWaterActionPerformed
        // Add water button
        // Checks to see if the new customer button was pressed at the beginning of the program
        initial();
        // If conditional to execute if the first new customer button was pressed
        if (start == true) {
            // Adds the water, displays the water level, and displays instructions
            customer.addWater();
            waterDisplay.setText(Integer.toString(customer.getWaterLevel()));
            instructionsDisplay.setText(customer.getSentence() + "\nDone. Please add the coffee beans.");
            // Disables the 'Add Water' button and enables the 'Add Beans' button
            addWater.setEnabled(false);
            addBeans.setEnabled(true);
        }
    }//GEN-LAST:event_addWaterActionPerformed

    private void newCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newCustomerActionPerformed
        // New customer button
        start = true;
        // Executes the new customer method (disables/enables buttons, resets text)
        newCustomer();
        inputName.setEnabled(true);
        // Displays instructions
        instructionsDisplay.setText("Please enter the name of the customer under 'Name and click 'Input Name'.");
    }//GEN-LAST:event_newCustomerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CoffeeKlatchUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CoffeeKlatchUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CoffeeKlatchUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CoffeeKlatchUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CoffeeKlatchUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBeans;
    private javax.swing.JButton addWater;
    private javax.swing.JTextField beansAddedDisplay;
    private javax.swing.JTextField beansGrindedDisplay;
    private javax.swing.JButton brewCoffee;
    private javax.swing.JTextField coffeeBrewedDisplay;
    private javax.swing.JLabel cupStatus;
    private javax.swing.JTextField cupStatusDisplay;
    private javax.swing.JButton drinkCup;
    private javax.swing.JButton exit;
    private javax.swing.JButton grindBeans;
    private javax.swing.JToggleButton inputName;
    private javax.swing.JTextArea instructionsDisplay;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton largeCup;
    private javax.swing.JButton mediumCup;
    private javax.swing.JTextField nameDisplay;
    private javax.swing.JTextField nameInput;
    private javax.swing.JButton newCustomer;
    private javax.swing.JButton pourCup;
    private javax.swing.JButton regularStrength;
    private javax.swing.JTextField sizeDisplay;
    private javax.swing.JButton smallCup;
    private javax.swing.JTextField strengthDisplay;
    private javax.swing.JButton strongStrength;
    private javax.swing.JTextField waterDisplay;
    private javax.swing.JButton weakStrength;
    // End of variables declaration//GEN-END:variables
}
